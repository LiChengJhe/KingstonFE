// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using EAP_WebAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace EAP_WebAPI.Contexts
{
    public partial class KingstonContext : DbContext
    {
        public KingstonContext()
        {
        }

        public KingstonContext(DbContextOptions<KingstonContext> options)
            : base(options)
        {
        }

        public virtual DbSet<EqpAlarm> EqpAlarm { get; set; }
        public virtual DbSet<EqpInfo> EqpInfo { get; set; }
        public virtual DbSet<EqpStatus> EqpStatus { get; set; }
        public virtual DbSet<EqpWip> EqpWip { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=kingston.database.windows.net;Initial Catalog=Kingston;User ID=chengjhe;Password=XXXX");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EqpAlarm>(entity =>
            {
                entity.ToTable("eqp_alarm");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AlarmId)
                    .IsRequired()
                    .HasColumnName("alarm_id")
                    .HasMaxLength(10);

                entity.Property(e => e.AlarmText)
                    .IsRequired()
                    .HasColumnName("alarm_text");

                entity.Property(e => e.AlarmTime)
                    .HasColumnName("alarm_time")
                    .HasColumnType("datetime");

                entity.Property(e => e.AlarmType)
                    .IsRequired()
                    .HasColumnName("alarm_type")
                    .HasMaxLength(10);

                entity.Property(e => e.EqpId)
                    .IsRequired()
                    .HasColumnName("eqp_id")
                    .HasMaxLength(10);

                entity.HasOne(d => d.Eqp)
                    .WithMany(p => p.EqpAlarm)
                    .HasForeignKey(d => d.EqpId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__eqp_alarm__eqp_i__6A30C649");
            });

            modelBuilder.Entity<EqpInfo>(entity =>
            {
                entity.HasKey(e => e.EqpId)
                    .HasName("PK__EqpInfo__B60E3354D2EBC6AB");

                entity.ToTable("eqp_info");

                entity.Property(e => e.EqpId)
                    .HasColumnName("eqp_id")
                    .HasMaxLength(10);

                entity.Property(e => e.EqpType)
                    .IsRequired()
                    .HasColumnName("eqp_type")
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<EqpStatus>(entity =>
            {
                entity.ToTable("eqp_status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.EqpId)
                    .IsRequired()
                    .HasColumnName("eqp_id")
                    .HasMaxLength(10);

                entity.Property(e => e.EqpStatusType)
                    .IsRequired()
                    .HasColumnName("eqp_status")
                    .HasMaxLength(10);

                entity.Property(e => e.EqpStatusTime)
                    .HasColumnName("eqp_status_time")
                    .HasColumnType("datetime");

                entity.HasOne(d => d.Eqp)
                    .WithMany(p => p.EqpStatus)
                    .HasForeignKey(d => d.EqpId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__eqp_statu__eqp_i__6B24EA82");
            });

            modelBuilder.Entity<EqpWip>(entity =>
            {
                entity.ToTable("eqp_wip");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.EqpId)
                    .IsRequired()
                    .HasColumnName("eqp_id")
                    .HasMaxLength(10);

                entity.Property(e => e.Lot)
                    .IsRequired()
                    .HasColumnName("lot")
                    .HasMaxLength(10);

                entity.Property(e => e.Time)
                    .HasColumnName("time")
                    .HasColumnType("datetime");

                entity.Property(e => e.WaferId)
                    .IsRequired()
                    .HasColumnName("wafer_id")
                    .HasMaxLength(10);

                entity.HasOne(d => d.Eqp)
                    .WithMany(p => p.EqpWip)
                    .HasForeignKey(d => d.EqpId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__eqp_wip__eqp_id__693CA210");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}